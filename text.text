Seguem todas as operadores de comparação:

< - menor que
> - maior que
<= - menor ou igual a
>= - maior ou igual a
== - igual a
!= - diferente de



laço de redpetição utilizando FOR 
range significa que ele vai percorrer uma lista 
for variavel in range (1, 10)

resposta(
1
2
3
4
5
6
7
8
9
10

)

########################### random 

é necessário realizar a importacao 
import random 

exemplo 
numero_random = random.random() * 100
#declara que a resposta sera em número inteiro 
int(numero_random)

#randrange
O ideal seria que pudéssemos definir um intervalo, dizer que queremos que o número gerado esteja entre 1 e 100. Como o random é um módulo, ele possui mais de uma função e a função randrange() serve exatamente para esse nosso problema. Se passarmos um parâmetro para ela, ela irá gerar um número inteiro de 0 até o valor desse parâmetro menos 1. Se passarmos dois parâmetros para ela, ela irá gerar um número inteiro do valor do primeiro parâmetro até o valor do segundo parâmetro menos 1, exatamente o que queremos!

Vamos, passando o intervalo que queremos para a função randrange(), lembrando que como queremos que o número gerado esteja entre 1 e 100 (inclusive), precisamos passar o número 101 como segundo parâmetro para a função:
#A abs
abs ()função retorna o valor absoluto do número especificado.


##### funcao
def nome_da_funcao():
    # todo o código identado faz parte da função
    print("aprendendo funções")


def soma(a, b):
     return a + b


### CLASSE
.upper = DEIXA AS LETRAS EM CAIXA ALTA
.STRIO = RETIRA O ESPACO DO INICIO E FINAL
.CAPITALIZE = PÕE A PRIMEIRA LETRA MAIÚSCULA
.append = adicionar valor 
.clear = apagar 


##### LISTA ----- >>>>>> dias = ["Domingo", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sábado"]

####     TUPLAS  --- >>> dias = ("Domingo", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sábado")


dias.append("") adiciona algo no final da lista
dias.pop() retira item adicionado
type(dias) - verifica qual é o tipo de variavel string, list, tupla etc


#Deletar um elemento em um índice específico com ###del(lista[indice])
Remover elementos no fim da lista com lista.pop(), retornará o elemento removido
Remover um elemento específico com lista.remove(elemento) - Busca pelo elemento e remove ele - Se o elemento ocorre múltiplas vezes na lista, remove a primeira ocorrência - Se o elemento não estiver presente na lista, ocorrerá um erro


.open = abrir aquivo 
.open("nome arquivos""funcao") = arquivo ler ou escrever no arquivo
arquivo.read () = ler o arquivo
arquivo.close



#organizando funcao
